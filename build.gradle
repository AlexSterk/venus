group 'venus164'
version '0.2.4'

buildscript {
    ext.kotlin_version = '1.3.72'
    ext.dokka_version = '0.9.14'

    repositories {
        maven { url 'https://dl.bintray.com/kotlin/kotlin-1.1.4' }
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }

}

apply plugin: "kotlin"

//apply plugin: 'kotlin2js'
//apply plugin: 'kotlin-dce-js'
apply plugin: 'org.jetbrains.dokka'

//runDceKotlinJs.keep 'venus_main.venus.glue.Driver.run', 'venus_main.venus.assembler.Linter'



configurations {
    ktlint
}

repositories {
    maven { url 'https://dl.bintray.com/kotlin/kotlin-1.3.72' }
    maven { url "https://kotlin.bintray.com/kotlinx" }
    mavenCentral()
    jcenter()
}

task ktlint(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "--verbose", "src/**/*.kt"
}

check.dependsOn ktlint

task ktlintFormat(type: JavaExec) {
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}

dokka {
    outputFormat = 'html'
    outputDirectory = "doc"
}

dependencies {
    ktlint 'com.github.shyiko:ktlint:0.8.1'
    compile "org.jetbrains.kotlin:kotlin-stdlib"
    compile "org.jetbrains.kotlin:kotlin-stdlib-common"
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-cli" 
    implementation("org.jetbrains.kotlinx:kotlinx-cli:0.2.1")
    testCompile "org.jetbrains.kotlin:kotlin-test"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit"
}

task uberJar(type: Jar) {
    archiveClassifier = 'uber'

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }

    manifest {
        attributes 'Main-Class': 'venus.CommandLineKt'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

jar {
    manifest {
        attributes 'Main-Class': 'venus.CommandLineKt'
    }
}
